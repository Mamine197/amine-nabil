const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
require('dotenv').config();

const app = express();

// Middleware pour logger toutes les requ√™tes
app.use((req, res, next) => {
    console.log(`üì• ${req.method} ${req.url}`);
    next();
});

// Middleware
app.use(cors()); // Accepter toutes les origines pendant le d√©veloppement

// Middleware pour parser le JSON
app.use(express.json());

// Route de test simple
app.get('/', (req, res) => {
    console.log('üì• GET / - Route de test');
    res.json({ message: 'API de r√©servation de vols' });
});

// Routes
const volsRouter = require('./routes/vols');
app.use('/api/vols', volsRouter);
console.log('‚úÖ Routes mont√©es sur /api/vols');

// Middleware pour g√©rer les routes non trouv√©es
app.use((req, res) => {
    console.log(`‚ùå Route non trouv√©e: ${req.method} ${req.url}`);
    res.status(404).json({ message: 'Route non trouv√©e' });
});

// MongoDB Connection
console.log('üîÑ Tentative de connexion √† MongoDB...');
mongoose.connect('mongodb://127.0.0.1:27017/reservation-vols', {
    useNewUrlParser: true,
    useUnifiedTopology: true
}).then(() => {
    console.log('‚úÖ Connect√© √† MongoDB avec succ√®s');
}).catch(err => {
    console.error('‚ùå Erreur de connexion √† MongoDB:', err);
    process.exit(1);
});

const PORT = 3000;
app.listen(PORT, () => {
    console.log(`‚úÖ Serveur d√©marr√© sur http://localhost:${PORT}`);
});
